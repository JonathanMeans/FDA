/*
 * Updated Date: 11/22/2014
 * Users: Jonathan Means,Karolina Reitz,
 * Users:Yuwen Huang, Paul Corter
 * 
 */
package fda;

import org.jfree.chart.demo.BarChartDemo1;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.select.Elements;

import java.io.FileWriter;
import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.*;
import java.lang.NumberFormatException;

public class FDA extends javax.swing.JFrame {

    /** Creates new form Antenna */
    public FDA() {
        initComponents();
    }

/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        displayficPanel = new javax.swing.JPanel();
        searchlinkLabel = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        timerangeComboBox = new javax.swing.JComboBox();
        filterLabel = new javax.swing.JLabel();
        downloadPanel = new javax.swing.JPanel();
        chapterLabel = new javax.swing.JLabel();
        chapterTextField1 = new javax.swing.JTextField();
        toLabel = new javax.swing.JLabel();
        chapterTextField2 = new javax.swing.JTextField();
        downloadlinkLabel = new javax.swing.JLabel();
        downloadTextField = new javax.swing.JTextField();
        DownloadButton = new javax.swing.JButton();
        folderButton = new javax.swing.JButton();
        totalchaptersTextField = new javax.swing.JTextField();
        totalchaptersLabel = new javax.swing.JLabel();
        folderSelecter = new javax.swing.JFileChooser();
        downloadLocationField = new javax.swing.JTextField();
        downloadLocationLabel = new javax.swing.JLabel();
        sortbetaPanel = new javax.swing.JPanel();
        betalinkLabel = new javax.swing.JLabel();
        sortBetaTextField = new javax.swing.JTextField();
        sortBetasearchButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fantastical Data Assistant");
        setResizable(false);
        displayficPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Display the top 10 fics", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        displayficPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        searchlinkLabel.setText("Fic URL:");

        searchTextField.setText("https://www.fanfiction.net/book/Harry-Potter/");
        searchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldActionPerformed(evt);
            }
        });

        searchButton.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        searchButton.setText("Search");
        searchButton.setToolTipText("Search top 10 fics");
        searchButton.setMaximumSize(new java.awt.Dimension(85, 23));
        searchButton.setMinimumSize(new java.awt.Dimension(85, 23));
        searchButton.setPreferredSize(new java.awt.Dimension(85, 23));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        timerangeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Time Range:All", "Updated within 1 week", "Updated within 1 month", "Updated within 2 month"}));
        timerangeComboBox.setToolTipText("Time Range Options");
        timerangeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timerangeComboBoxActionPerformed(evt);
            }
        });

        filterLabel.setText("Filter:");

        org.jdesktop.layout.GroupLayout displayficPanelLayout = new org.jdesktop.layout.GroupLayout(displayficPanel);
        displayficPanel.setLayout(displayficPanelLayout);
        displayficPanelLayout.setHorizontalGroup(
                displayficPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(displayficPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .add(displayficPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(displayficPanelLayout.createSequentialGroup()
                                                .add(searchlinkLabel)
                                                .add(52, 52, 52)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .add(searchTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 370, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(displayficPanelLayout.createSequentialGroup()
                                                .add(filterLabel)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .add(timerangeComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 244, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(40, 40, 40)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(searchButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        displayficPanelLayout.setVerticalGroup(
                displayficPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(displayficPanelLayout.createSequentialGroup()
                                .add(14, 14, 14)
                                .add(displayficPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(searchlinkLabel)
                                        .add(searchButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(searchTextField))
                                .add(14, 14, 14)
                                .add(displayficPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(filterLabel)
                                        .add(timerangeComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(7, 7, 7))
        );

        searchlinkLabel.getAccessibleContext().setAccessibleName("searchlink");
        searchTextField.getAccessibleContext().setAccessibleName("searchTextfiled");

        downloadPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Download", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        chapterLabel.setText("Chapters:");
        chapterLabel.setToolTipText("");

//        chapterTextField1.setEditable(false);
        chapterTextField1.setText("1");

        toLabel.setText("To:");

        chapterTextField2.setText("1");

        downloadlinkLabel.setText("Fic URL:");

        //Valid URL's but can not verify non english links
//        downloadTextField.setText("https://www.fanfiction.net/s/9669819/1/The-Two-Year-Emperor"); //This works great
        downloadTextField.setText("https://www.fanfiction.net/s/9655643/1/The-Darkness-Within"); //This works great
//        downloadTextField.setText("https://www.fanfiction.net/s/10701601/1/Bid-Time-Return"); //This works great
//        downloadTextField.setText("https://www.fanfiction.net/s/10801771/1/Reuni%C3%A9ndonos-de-nuevo-MIDLINK");
//        downloadTextField.setText("https://www.fanfiction.net/s/9391959/1/%E5%A6%88%E8%9B%8B%E5%87%BA%E5%93%81%E6%B8%A3%E8%87%AA%E6%B1%89%E5%8C%96%E9%BB%91%E7%AF%AECP%E9%9D%92%E9%BB%91-Snowfall");
        //Invalid URL's
//        downloadTextField.setText("https://www.fanfiction.net/"); //Came up invalid
//        downloadTextField.setText("https://www.fanfiction.net/betareaders/all/cartoon/"); //Came up invalid
//        downloadTextField.setText("https://www.fanfiction.net/game/Pok%C3%A9mon/"); //Came up invalid
//        downloadTextField.setText("https://www.fanfiction.net/s/9394959/1/fail"); //Created directory but no downloads
        downloadTextField.setPreferredSize(new java.awt.Dimension(232, 20));
        downloadTextField.setSelectionEnd(45);
        downloadTextField.setSelectionStart(45);
        downloadTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadTextFieldActionPerformed(evt);
            }
        });

        DownloadButton.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        DownloadButton.setText("Download");
        DownloadButton.setToolTipText("Download fic to default C drive");
        DownloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DownloadButton1ActionPerformed(evt);
            }
        });

        folderButton.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        folderButton.setText("Location");
        folderButton.setToolTipText("Select Directory to Download files to");
        folderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folderButton1ActionPerformed(evt);
            }
        });
        totalchaptersLabel.setText("Total Chapters:");
        folderSelecter.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        downloadLocationLabel.setText("Location:");
        downloadLocationLabel.setToolTipText("");

        org.jdesktop.layout.GroupLayout downloadPanelLayout = new org.jdesktop.layout.GroupLayout(downloadPanel);
        downloadPanel.setLayout(downloadPanelLayout);
        downloadPanelLayout.setHorizontalGroup(
                downloadPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(downloadPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .add(downloadPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(downloadlinkLabel)
                                        .add(chapterLabel)
                                        .add(downloadLocationLabel))
                                .add(46, 46, 46)
                                .add(downloadPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                        .add(downloadTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 371, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(downloadLocationField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 371, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(downloadPanelLayout.createSequentialGroup()
                                                .add(chapterTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                                .add(toLabel)
                                                .add(18, 18, 18)
                                                .add(chapterTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .add(totalchaptersLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .add(18, 18, 18)
                                                .add(totalchaptersTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(downloadPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(downloadPanelLayout.createSequentialGroup()
                                                .add(40, 40, 40)
                                                .add(DownloadButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, downloadPanelLayout.createSequentialGroup()
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(folderButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
        );
        downloadPanelLayout.setVerticalGroup(
                downloadPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(downloadPanelLayout.createSequentialGroup()
                                .add(16, 16, 16)
                                .add(downloadPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                                        .add(downloadTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                        .add(DownloadButton))
                                .add(17, 17, 17)
                                .add(downloadPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                                        .add(chapterLabel)
                                        .add(chapterTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(toLabel)
                                        .add(chapterTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(totalchaptersTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(totalchaptersLabel))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 12, Short.MAX_VALUE)
                                .add(downloadPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(downloadLocationLabel)
                                        .add(downloadLocationField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(folderButton)))
                        .add(org.jdesktop.layout.GroupLayout.CENTER, downloadPanelLayout.createSequentialGroup()
                                .add(22, 22, 22)
                                .add(downloadlinkLabel)
                                .add(77, 77, 77))
        );


        chapterLabel.getAccessibleContext().setAccessibleName("chapters");
        chapterTextField1.getAccessibleContext().setAccessibleName("");
        toLabel.getAccessibleContext().setAccessibleName("To");
        downloadlinkLabel.getAccessibleContext().setAccessibleName("downloadlink");
        downloadTextField.getAccessibleContext().setAccessibleName("download");
        downloadTextField.getAccessibleContext().setAccessibleDescription("\\");
        downloadLocationLabel.getAccessibleContext().setAccessibleName("downloadLocation");

        sortbetaPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "listings of beta readers", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        sortbetaPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        betalinkLabel.setText("Fic URL:");

        sortBetaTextField.setText("https://www.fanfiction.net/betareaders/anime/Anima/");
        sortBetaTextField.setSelectionEnd(45);
        sortBetaTextField.setSelectionStart(45);
        sortBetaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortBetaTextFieldActionPerformed(evt);
            }
        });

        sortBetasearchButton.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        sortBetasearchButton.setText("Sort");
        sortBetasearchButton.setToolTipText("Sort beata reader");
        sortBetasearchButton.setFocusCycleRoot(true);
        sortBetasearchButton.setMaximumSize(new java.awt.Dimension(85, 23));
        sortBetasearchButton.setMinimumSize(new java.awt.Dimension(85, 23));
        sortBetasearchButton.setPreferredSize(new java.awt.Dimension(85, 23));
        sortBetasearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortBetasearchButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout sortbetaPanelLayout = new org.jdesktop.layout.GroupLayout(sortbetaPanel);
        sortbetaPanel.setLayout(sortbetaPanelLayout);
        sortbetaPanelLayout.setHorizontalGroup(
                sortbetaPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(sortbetaPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .add(betalinkLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(sortBetaTextField)
                                .add(44, 44, 44)
                                .add(sortBetasearchButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        sortbetaPanelLayout.setVerticalGroup(
                sortbetaPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(sortbetaPanelLayout.createSequentialGroup()
                                .add(10, 10, 10)
                                .add(sortbetaPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(sortBetaTextField)
                                        .add(betalinkLabel)
                                        .add(sortBetasearchButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        betalinkLabel.getAccessibleContext().setAccessibleName("betalink");
        sortBetaTextField.getAccessibleContext().setAccessibleName("sortBeta");
        sortBetasearchButton.getAccessibleContext().setAccessibleDescription("Sort beta reader");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                                .addContainerGap()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(downloadPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, displayficPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(sortbetaPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                                .addContainerGap()
                                .add(displayficPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(downloadPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(28, 28, 28)
                                .add(sortbetaPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        displayficPanel.getAccessibleContext().setAccessibleName("display10");
        sortbetaPanel.getAccessibleContext().setAccessibleName("sortBeta");

        pack();
    }// </editor-fold>
    public enum UrlType{FANDOM, FIC, BETA, UNKNOWN}
    public static final String BASE_URL = "https://www.fanfiction.net";
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO Search button:

        // validateURL validURl = new validateURL();
        String url = searchTextField.getText();
        if (UrlType.FANDOM== checkUrl(url))
        {
            //do search

            //this stores allows a translation from the date range selected to the number of days to search
            //ideally this would be refactored so that we only have to change the code in one place
            //if we want to alter the possible date ranges, but good enough for now
            int[] daySelection = {Integer.MAX_VALUE, 7, 30, 365 / 2};
            int numDays = daySelection[timerangeComboBox.getSelectedIndex()];
            try {
                System.out.println("Started");
                fanficJFrame frame = new fanficJFrame(url, numDays);
                frame.setVisible(true);
            } catch (IOException e) {
                //TODO: display error message
            }
            System.out.println("and here do search");
        }
        else
        {
            //show error message
            String message = "\"The search fic link is not recognized,\"\n"
                    + "please try again.";
            JOptionPane.showMessageDialog(new JFrame(), message, "Dialog",JOptionPane.ERROR_MESSAGE);
        }
    }

    private void folderButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        int returnVal = folderSelecter.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION)
            downloadLocationField.setText(folderSelecter.getSelectedFile().toString());
    }

    private void DownloadButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        // // TODO download button:
        // validateURL validURl = new validateURL();
        if (UrlType.FIC == checkUrl(downloadTextField.getText()))
        {
            //do search
            System.out.println("and here do download");

            org.jsoup.nodes.Document doc;
            //try {
                //doc = org.jsoup.Jsoup.connect(downloadTextField.getText()).get();
                //String text = doc.body().text();

                String ficName = downloadTextField.getText().substring(downloadTextField.getText().lastIndexOf("/")+1);
                java.io.File dir = new java.io.File(downloadLocationField.getText()+java.io.File.separator+ficName);

                System.out.println("Downloading to "+dir.getAbsolutePath());

                if (!dir.exists()) {
                    try {
                        dir.mkdir();
                    } catch (SecurityException se) {
                        java.util.logging.Logger.getLogger(FDA.class.getName()).log(java.util.logging.Level.SEVERE, null, se);
                        return;  //Save directory couldn't be found or created, abort.
                    }
                }
                // Verify Chapter Numbers
                int chStart = 0;
                int chEnd = 0;
                try {
                    chStart = Integer.parseInt(chapterTextField1.getText());
                } catch (java.lang.NumberFormatException ex) {
                    JFrame frame = new JFrame("JOptionPane showMessageDialog example");
                    JOptionPane.showMessageDialog(frame, "Invalid Beginning Chapter Number", "FDA", JOptionPane.ERROR_MESSAGE);
                    chapterTextField1.setText("");
                    return;
                }
                if (chStart == 0) {
                    JFrame frame = new JFrame("JOptionPane showMessageDialog example");
                    JOptionPane.showMessageDialog(frame, "Beginning Chapter Number\ncan not be 0", "FDA", JOptionPane.ERROR_MESSAGE);
                    chapterTextField1.setText("");
                    return;
                }
                try {
                    chEnd = Integer.parseInt(chapterTextField2.getText());
                } catch (java.lang.NumberFormatException ex) {
                    JFrame frame = new JFrame("JOptionPane showMessageDialog example");
                    JOptionPane.showMessageDialog(frame, "Invalid Ending Chapter Number", "FDA", JOptionPane.ERROR_MESSAGE);
                    chapterTextField2.setText("");
                    return;
                }
                String baseAddress = downloadTextField.getText().substring(0,downloadTextField.getText().lastIndexOf("/")-1);
                baseAddress = baseAddress.substring(0,baseAddress.lastIndexOf("/")) + "/";

            for (int i=chStart; i<=chEnd; i++) {
                try {
                    doc = Jsoup.connect(baseAddress + i + "/" + ficName).get();
                    Elements para = doc.select("p");
                    Elements ficTitle = doc.select("title");
                    Elements Opts = doc.select("option");

                    if (chEnd > Opts.size() / 2) {
                        JFrame frame = new JFrame("JOptionPane showMessageDialog example");
                        JOptionPane.showMessageDialog(frame, "You can not select more then\n" + Opts.size()/2 + " Chapters", "FDA", JOptionPane.ERROR_MESSAGE);
                        chapterTextField2.setText("");
                        return;
                    }

                    String text = ficTitle + "</br>\n"; //Gives the web page the same title as the original.
                    String textTitle = ficTitle.text(); //Use the web page title as a document title
                    //Get Titles and Filename
                    String prevTitle = "";
                    String pageTitle = Opts.get(i-1).text();
                    pageTitle = "Chapter " + pageTitle.replace(".",":");

                    if (i > 1) {
                        prevTitle = Opts.get(i-2).text();
                        prevTitle = prevTitle.replace(". ","_");
                        prevTitle = prevTitle.replace(" ","_") + ".html";
                    }

                    String filenameTitle = Opts.get(i-1).text();
                    filenameTitle = filenameTitle.replace(". ","_");
                    filenameTitle = filenameTitle.replace(" ","_") + ".html";

                    String nextTitle = Opts.get(i).text();
                    nextTitle = nextTitle.replace(". ","_");
                    nextTitle = nextTitle.replace(" ","_") + ".html";

                    //Setup web page
                    text = text + "<style type='text/css'>\n"
                            + "a:link {\n"
                            + "color: #00F;\n"
                            + "text-decoration: none;\n"
                            + "}\n"
                            + "a:visited {\n"
                            + "text-decoration: none;\n"
                            + "color: #F00;\n"
                            + "}\n"
                            + "a:hover {\n"
                            + "text-decoration: none;\n"
                            + "color: #0F0;\n"
                            + "}\n"
                            + "a:active {\n"
                            + "text-decoration: none;\n"
                            + "color: #006;\n"
                            + "}\n"
                            + "body {\n"
                            + "    margin-left: 50px;\n"
                            + "    margin-top: 25px;\n"
                            + "    margin-right: 50px;\n"
                            + "    margin-bottom: 25px;\n"
                            + "}\n"
                            + "</style>\n"
                            + "<body>\n"
                            + "<center><h3>" + pageTitle + "</h3></center>\n"
                            + para + "\n";
                    if (i == 1) {
                        text = text+ "<center><a href='" + nextTitle + "'>" + Opts.get(i).text() + "</a>\n";  //Next link only for first page
                    } else {
                        text = text + "<center><a href='" + prevTitle + "'>" + Opts.get(i-2).text() + "</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='" + nextTitle + "'>" + Opts.get(i).text() + "</a>\n"; //Previous and Next Links
                    }
                    text = text + "</br></br><a href='" + baseAddress + i + "/" + ficName + "' target=_blank>Original Web Page</a></center></br>\n"; //Link to original website
                    java.io.File chapter = new java.io.File(dir+java.io.File.separator + filenameTitle);

                    FileWriter oStream = new FileWriter(chapter);
                    oStream.write(text);
                    oStream.close();
                } catch (java.io.IOException ex) {
                    java.util.logging.Logger.getLogger(FDA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
            }
            // create our jframe
            JFrame frame = new JFrame("JOptionPane showMessageDialog example");
            JOptionPane.showMessageDialog(frame, "Fan Fiction Downloads Complete", "FDA", JOptionPane.INFORMATION_MESSAGE);

            //} catch (java.io.IOException ex) {
            //    java.util.logging.Logger.getLogger(FDA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            //}

        }
        else
        {
            //show error message
            String message = "The download fic link is not recognized,\n"
                    + "please try again.";
            JOptionPane.showMessageDialog(new JFrame(), message, "Dialog",JOptionPane.ERROR_MESSAGE);
        }
    }

    private void sortBetasearchButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // // TODO sort beta reader button:
        // validateURL validURl = new validateURL();
        if (UrlType.BETA == checkUrl(sortBetaTextField.getText()))
        {
            //do sort beta
            System.out.println("and here do sorting");
        }
        else
        {
            //show error message
            String message = "\"The beta link is not recognized,\"\n"
                    + "please try again.";
            JOptionPane.showMessageDialog(new JFrame(), message, "Dialog",JOptionPane.ERROR_MESSAGE);
        }
    }

    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void downloadTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void sortBetaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void timerangeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO filter display top 10 fics:
        // get the selected item:
        int selection;
        String selectedBook = (String) timerangeComboBox.getSelectedItem();
        if(timerangeComboBox.getSelectedIndex()==0) selection=100;
        else if (timerangeComboBox.getSelectedIndex()==1) selection=7;
        else if (timerangeComboBox.getSelectedIndex()==2) selection=30;
        else if (timerangeComboBox.getSelectedIndex()==3) selection=60;
        System.out.println("Filter: " + selectedBook);
    }      
    public UrlType checkUrl(String url) {
        String ficString = BASE_URL + "/s/\\d+/\\d+/.+";
        String betaString = BASE_URL + "/betareaders/.+";
        String fandomString = BASE_URL + "/.+";
        //Test whether URL matches the fic pattern
        Pattern storyPattern = Pattern.compile(ficString);
        Matcher storyMatcher = storyPattern.matcher(url);
        if (storyMatcher.find()) {
            return UrlType.FIC;
        }
        //Test whether URL matches the beta listing pattern
        Pattern betaPattern = Pattern.compile(betaString);
        Matcher betaMatcher = betaPattern.matcher(url);
        if (betaMatcher.find()) { return UrlType.BETA; }
        //Test whether URL matches the fandom pattern
        Pattern fandomPattern = Pattern.compile(fandomString);
        Matcher fandomMatcher = fandomPattern.matcher(url);
        if (fandomMatcher.find()) { return UrlType.FANDOM; }
        return UrlType.UNKNOWN;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels=javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx=0; idx<installedLookAndFeels.length; idx++)
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FDA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FDA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FDA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FDA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FDA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton DownloadButton;
    private javax.swing.JButton folderButton;
    private javax.swing.JLabel betalinkLabel;
    private javax.swing.JLabel chapterLabel;
    private javax.swing.JTextField chapterTextField1;
    private javax.swing.JTextField chapterTextField2;
    private javax.swing.JPanel displayficPanel;
    private javax.swing.JTextField downloadLocationField;
    private javax.swing.JLabel downloadLocationLabel;
    private javax.swing.JPanel downloadPanel;
    private javax.swing.JTextField downloadTextField;
    private javax.swing.JLabel downloadlinkLabel;
    private javax.swing.JLabel filterLabel;
    private javax.swing.JFileChooser folderSelecter;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JLabel searchlinkLabel;
    private javax.swing.JTextField sortBetaTextField;
    private javax.swing.JButton sortBetasearchButton;
    private javax.swing.JPanel sortbetaPanel;
    private javax.swing.JComboBox timerangeComboBox;
    private javax.swing.JLabel toLabel;
    private javax.swing.JLabel totalchaptersLabel;
    private javax.swing.JTextField totalchaptersTextField;
    // End of variables declaration

}
